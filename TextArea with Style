<?php
if ( ! defined( 'ABSPATH' ) ) {
exit; // Exit if accessed directly.
}
class textarea_style_widget extends \Elementor\Widget_Base {

public function get_name() {
return 'textarea_style_widget';
}

public function get_title() {
return esc_html__( 'Textarea', 'textarea_style_widget' );
}

public function get_icon() {
return 'eicon-text';
}

public function get_custom_help_url() {
return 'https://developers.elementor.com/widgets/';
}

public function get_categories() {
return [ 'general' ];
}

public function get_keywords() {
return [ 'text', 'textarea' ];
}

protected function register_controls() {

    $this->start_controls_section(
        'text_section',
        [
        'label' => esc_html__( 'Text', 'textarea_style_widget' ),
        'tab' => \Elementor\Controls_Manager::TAB_CONTENT,
        ]
    );
        
        $this->add_control(
            'ytext',
            [
            'label' => esc_html__( 'Text', 'textarea_style_widget' ),
            'type' => \Elementor\Controls_Manager::TEXTAREA,
            'rows' => 10,
            'default' => esc_html__( 'Default description', 'textarea_style_widget' ),
            'placeholder' => esc_html__( 'Type your text here', 'textarea_style_widget' ),
            ]
        );

    $this->end_controls_section();


    $this->start_controls_section(
        'ytext-style',
        [
        'label' => esc_html__( 'Text Style', 'textarea_style_widget' ),
        'tab' => \Elementor\Controls_Manager::TAB_STYLE,
        ]
        );

        $this->add_control(
            'text_color',
            [
            'label' => esc_html__( 'Text Color', 'textarea_style_widget' ),
            'type' => \Elementor\Controls_Manager::COLOR,
            'selectors' => [
            '{{WRAPPER}} .text-style' => 'color: {{VALUE}}',
            ],
            ]
            );

        $this->add_group_control(
                \Elementor\Group_Control_Typography::get_type(),
                [
                'name' => 'content_typography',
                'selector' => '{{WRAPPER}} .text-style',
                ]
            );

        $this->add_group_control(
                    \Elementor\Group_Control_Border::get_type(),
                    [
                    'name' => 'border',
                    'label' => esc_html__( 'Border', 'textarea_style_widget' ),
                    'selector' => '{{WRAPPER}} .text-style',
                    ]
                    );

        $this->add_group_control(
                \Elementor\Group_Control_Background::get_type(),
                    [
                        'name' => 'background',
                        'label' => esc_html__( 'Background', 'textarea_style_widget' ),
                        'types' => [ 'classic', 'gradient' ],
                        'selector' => '{{WRAPPER}} .bla',
                    ]
            );

        $this->add_group_control(
                \Elementor\Group_Control_Text_Shadow::get_type(),
                    [
                        'name' => 'text_shadow',
                        'label' => esc_html__( 'Text Shadow', 'textarea_style_widget' ),
                        'selector' => '{{WRAPPER}} .text-style',
                    ]
                );

    $this->end_controls_section();

    }

        protected function render() {
                $settings = $this->get_settings_for_display();
                ?>
                <div class="bla"> 
                    <p class="text-style">
                        <?php echo $settings['ytext']; ?>
                    </p>
                    </div>
                <?php
        }


        protected function content_template() {
                ?>
                    <div class="bla"> 
                    <p class="text-style">
                        <# 
                            {{ settings.ytext }} 
                        #>
                    </p>
                    </div>
                <?php
        }

}
